package controllers

import (
	"encoding/json"
	"facturation-planning/config"
	"facturation-planning/models"
	"fmt"
	"net/http"
)

// CreateDevis godoc
// @Summary Cr√©er un devis complet
// @Description Cr√©e un devis avec les informations client, les dates et les lignes de devis
// @Tags Devis
// @Accept json
// @Produce json
// @Param devis body models.Devis true "Donn√©es du devis √† cr√©er"
// @Success 201 {object} models.Devis
// @Failure 400 {string} string "Requ√™te invalide"
// @Failure 500 {string} string "Erreur serveur"
// @Router /devis [post]
func CreateDevis(w http.ResponseWriter, r *http.Request) {
	var devis models.Devis

	if err := json.NewDecoder(r.Body).Decode(&devis); err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}

	fmt.Printf("‚û°Ô∏è Devis re√ßu : %+v\n", devis) // üëà ajoute ce log

	// Cr√©ation du devis + lignes associ√©es (cascade via GORM)
	if err := config.DB.Create(&devis).Error; err != nil {
		fmt.Printf("‚ùå ERREUR INSERT : %v\n", err) // üëà log erreur
		http.Error(w, "Erreur lors de la cr√©ation du devis", http.StatusInternalServerError)
		return
	}

	w.WriteHeader(http.StatusCreated)
	json.NewEncoder(w).Encode(devis)
}
