Pas de souci‚ÄØ! Voici comment faire une requ√™te **manuelle** dans PostgreSQL depuis le terminal `psql` :

---

### ‚úÖ 1. **Lancer le client PostgreSQL**

```bash
psql -U ton_utilisateur -d nom_de_ta_base
psql -U postgres -d facturation
```

> Exemple :

```bash
psql -U postgres -d facturation
```

---

### ‚úÖ 2. **Lister les tables**

```sql
\dt
```

---

### ‚úÖ 3. **Faire une requ√™te manuelle (SELECT, INSERT, etc.)**

#### Lire des donn√©es

```sql
SELECT * FROM plannings;
```

#### Ins√©rer un enregistrement

```sql
INSERT INTO plannings (date, heure_debut, heure_fin, type_evenement, salarie_id, client_id, objet, prestation, facturation, taux_horaire, forfait_ht, entreprise_id)
VALUES ('2025-04-20', '09:00', '10:00', 'Intervention', 1, 2, 'Support', 'Comptable', 'Comptabilis√©', 40, 0, 1);
```

#### Supprimer

```sql
DELETE FROM plannings WHERE id = 42;
```

#### Mettre √† jour

```sql
UPDATE plannings SET objet = 'MAJ test' WHERE id = 42;
```

---

### ‚úÖ 4. **Quitter `psql`**

```sql
\q
```

Tu veux un exemple sp√©cifique de requ√™te pour corriger un `salarie_id` invalide, par exemple ?

---

## üìö **Documentation Swagger API**

### ‚úÖ 1. **Installer swag (si pas encore fait)**

```bash
go install github.com/swaggo/swag/cmd/swag@latest
```

### ‚úÖ 2. **G√©n√©rer la documentation Swagger**

Apr√®s avoir ajout√© ou modifi√© les commentaires Swagger dans vos contr√¥leurs :

```bash
swag init
```

Ou si votre main.go n'est pas √† la racine :

```bash
swag init -g cmd/main.go
```

### ‚úÖ 3. **Acc√©der √† la documentation**

Une fois le serveur lanc√©, la documentation Swagger sera disponible √† :

```
http://localhost:8080/swagger/index.html
```

### ‚úÖ 4. **Structure des commentaires Swagger**

Exemple de commentaire pour une fonction :

```go
// @Summary R√©sum√© de la fonction
// @Description Description d√©taill√©e
// @Tags Nom_du_tag
// @Accept json
// @Produce json
// @Param id path string true "Description du param√®tre"
// @Success 200 {object} models.MonModel
// @Failure 400 {string} string "Message d'erreur"
// @Router /api/mon-endpoint [get]
```

### ‚úÖ 5. **Commandes utiles**

- **R√©g√©n√©rer apr√®s modifications** : `swag init`
- **V√©rifier la syntaxe** : `swag fmt`
- **Version de swag** : `swag --version`

### ‚úÖ 6. **Fichiers g√©n√©r√©s**

Apr√®s `swag init`, ces fichiers sont cr√©√©s automatiquement :
- `docs/docs.go`
- `docs/swagger.json`
- `docs/swagger.yaml`

> ‚ö†Ô∏è **Important** : Ne pas modifier manuellement les fichiers dans le dossier `docs/`
