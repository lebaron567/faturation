services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: "facturation"
      POSTGRES_USER: "facturation_user"
      POSTGRES_PASSWORD: "change_me_secure_password_123"
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U facturation_user -d facturation"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: ./facturation-planning-backend
      dockerfile: Dockerfile
    environment:
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_NAME: "facturation"
      DB_USER: "facturation_user"
      DB_PASSWORD: "change_me_secure_password_123"
      PORT: "8080"
      ENV: "production"
      CORS_ORIGINS: "http://localhost"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  web:
    build:
      context: ./facturation-planning-frontend
      dockerfile: Dockerfile
    volumes:
      - webdist:/usr/share/web
    depends_on:
      - api
    restart: unless-stopped

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddydata:/data
      - caddyconfig:/config
      - webdist:/usr/share/web:ro
    depends_on:
      - api
      - web
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  dbdata:
  webdist:
  caddydata:
  caddyconfig:
