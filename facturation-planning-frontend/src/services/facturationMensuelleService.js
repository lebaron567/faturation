import axiosInstance from '../axiosInstance';

export const facturationMensuelleService = {
    /**
     * Obtient un aper√ßu de la facturation mensuelle
     * @param {number} mois - Mois (1-12)
     * @param {number} annee - Ann√©e
     * @param {Array<number>} clientIds - IDs des clients (optionnel)
     * @returns {Promise<Object>} Donn√©es de pr√©visualisation
     */
    async getPreview(mois, annee, clientIds = []) {
        try {
            console.log('üîç Demande aper√ßu facturation:', { mois, annee, clientIds });
            const response = await axiosInstance.post('/facturation-mensuelle/preview', {
                mois,
                annee,
                client_ids: clientIds
            });
            console.log('‚úÖ Aper√ßu re√ßu:', response.data);
            return response.data;
        } catch (error) {
            console.error('‚ùå Erreur aper√ßu facturation mensuelle:', error);
            throw error;
        }
    },

    /**
     * Cr√©e effectivement les factures mensuelles
     * @param {number} mois - Mois (1-12)
     * @param {number} annee - Ann√©e
     * @param {Array<number>} clientIds - IDs des clients (optionnel)
     * @returns {Promise<Object>} R√©sultat de la cr√©ation
     */
    async createFactures(mois, annee, clientIds = []) {
        try {
            console.log('üìÑ Cr√©ation factures:', { mois, annee, clientIds });
            const response = await axiosInstance.post('/facturation-mensuelle/create', {
                mois,
                annee,
                client_ids: clientIds
            });
            console.log('‚úÖ Factures cr√©√©es:', response.data);
            return response.data;
        } catch (error) {
            console.error('‚ùå Erreur cr√©ation facturation mensuelle:', error);
            throw error;
        }
    }
};
